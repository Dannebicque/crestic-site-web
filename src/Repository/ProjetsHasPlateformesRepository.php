<?php

namespace App\Repository;

use App\Entity\ProjetsHasPlateformes;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * ProjetsHasPlateformesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetsHasPlateformesRepository  extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, ProjetsHasPlateformes::class);
    }

    public function findAllPlateformesFromProjetBuilder($id_projet)
    {
        return $this->createQueryBuilder('a','a.id')
            ->select ('a')
            ->where('a.projet = ?1')
            ->innerJoin('a.plateforme','b')
            ->orderBy('b.nom','asc')
            ->setParameter(1,$id_projet);
    }

    public function findAllPlateformesFromProjet ($id_projet)
    {
        return $this->findAllPlateformesFromProjetBuilder($id_projet)->getQuery()->getResult();
    }

    public function getArrayIdFromProjetsPlateformes ($id_projet)
    {
        $result = [];
        $array  =  $this->findAllPlateformesFromProjet($id_projet);

        foreach ($array as $key=>$value)
        {
            $id = $value->getPlateforme()->getId();
            $result[] = $id;
        }
        return $result;
    }

    public function findAllProjetsFromPlateformeBuilder($id_plateforme)
    {
        return $this->createQueryBuilder('a','a.id')
            ->select ('a')
            ->where('a.plateforme = ?1')
            ->innerJoin('a.projet','b')
            ->orderBy('b.titre','asc')
            ->setParameter(1,$id_plateforme);
    }

    public function findAllProjetsFromPlateforme ($id_plateforme)
    {
        return $this->findAllProjetsFromPlateformeBuilder($id_plateforme)->getQuery()->getResult();
    }
}
